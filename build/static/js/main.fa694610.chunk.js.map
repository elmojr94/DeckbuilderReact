{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","index.js"],"names":["fetchCards","a","name","text","axios","get","data","cards","SearchBar","setResults","useState","setName","setText","event","preventDefault","id","onSubmit","type","placeholder","value","onChange","target","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","className","src","onClick","SearchResults","results","length","map","result","DeckList","deck","cardCount","reduce","card","count","App","setDeck","nextDeck","index","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa694610.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function fetchCards({ name, text }) {\n  try {\n    const { data } = await axios.get(\n      `https://api.magicthegathering.io/v1/cards?name=${ name }&text=${ text }`\n    );\n\n    return data.cards || [];\n  } catch (error) {\n    throw error;\n  }\n}","import React, { useState } from 'react';\n\nimport {\n  fetchCards,\n} from '../api';\n\nconst SearchBar = ({ setResults }) => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n\n  const handleNameChange = event => {\n    setName( event.target.value );\n  }\n\n  const handleTextChange = event => {\n    setText( event.target.value );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const cards = await fetchCards({\n      name,\n      text\n    });\n\n    setResults(cards);\n  }\n\n  return (\n    <div id=\"search\">\n      <h3>Look up cards here...</h3>\n      <form onSubmit={ handleSubmit }>\n        <input\n          type=\"text\" \n          placeholder=\"card name\"\n          value={ name }\n          onChange={ handleNameChange } />\n        <input\n          type=\"text\"\n          placeholder=\"card text\"\n          value={ text }\n          onChange={ handleTextChange } />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = ({\n  id,\n  name,\n  type,\n  manaCost,\n  text,\n  flavor,\n  imageUrl,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <div className=\"Card\">\n      <div className=\"info\">\n        <p className=\"header\">\n          { name } - { manaCost }\n        </p>\n        <p className=\"type\">\n          { type }\n        </p>\n        <p className=\"text\">\n          { text }\n        </p>\n        <p className=\"flavor\">\n          { flavor }\n        </p>\n      </div>\n      <img className=\"preview\" src={ imageUrl } />\n      <div className=\"actions\">\n        <button\n          onClick={() => {\n            addCardToDeck({\n              id,\n              name\n            })\n          }}>\n            (+) Add to Deck\n          </button>\n        <button\n          onClick={() => {\n            removeCardFromDeck({\n              id\n            })\n          }}>\n          (-) Remove from Deck\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\n\nimport Card from './Card';\nimport './SearchResults.css';\n\nconst SearchResults = ({ \n  results,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <div id=\"results\">\n      <h3>Here's what we found ({ results.length } results):</h3>\n      <div className=\"CardList\">\n        {\n          results.map(result => (\n            <Card \n              key={ result.id } \n              addCardToDeck={ addCardToDeck }\n              removeCardFromDeck={ removeCardFromDeck }\n              {...result} />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResults;","import React from 'react';\n\nconst DeckList = ({ \n  deck,\n  addCardToDeck,\n  removeCardFromDeck\n }) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count\n  }, 0);\n\n  return (\n    <div id=\"deck\">\n      <h3>Your deck so far ({ cardCount } cards):</h3>\n      <div className=\"DeckList\">\n      {deck.map(({ id, name, count }) => (\n        <p key={ id }>\n          <span>\n            ({ count }x) { name }\n          </span><br /> \n          <button onClick={\n            () => addCardToDeck({ id, name })\n          }> + </button>\n          <button onClick={\n            () => removeCardFromDeck({ id })\n          }> - </button>\n        </p>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DeckList;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport {\n    fetchCards,\n  } from './api';\nimport axios from 'axios';\n\nimport {\n    DeckList,\n    SearchBar,\n    SearchResults\n  } from './components';\n  \n  const App = () => {\n    const [results, setResults] = useState([]);\n    const [deck, setDeck] = useState([]);\n  \n        const addCardToDeck = ({ id, name }) => {\n            const nextDeck = [...deck]; // make a duplicate first\n            const index = nextDeck.findIndex(card => card.id === id);\n          \n            // index will be -1 if it is not found\n            if (index > -1) {\n              nextDeck[index].count += 1;\n            } else {\n              nextDeck.push({\n                id,\n                name,\n                count: 1\n              });\n            }\n          \n            setDeck(nextDeck);\n          \n    }\n  \n    const removeCardFromDeck = ({ id }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n      \n        if (index === -1) {\n          // don't do anything if we're trying to remove a card not in the deck\n          return;\n        }\n      \n        if (nextDeck[index].count === 1) {\n          // remove the card altogether\n          nextDeck.splice(index, 1);\n        } else {\n          // decrement the count\n          nextDeck[index].count -= 1;\n        }\n      \n        setDeck(nextDeck);\n      }\n  \n      return (\n        <div id=\"app\">\n          <SearchBar setResults={setResults} />\n          <SearchResults\n            results={results}\n            addCardToDeck={addCardToDeck}\n            removeCardFromDeck={removeCardFromDeck}\n          />\n          <DeckList\n            deck={deck}\n            addCardToDeck={addCardToDeck}\n            removeCardFromDeck={removeCardFromDeck}\n          />\n        </div>\n      );\n  }\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}